<chapter id="ClientInstall">
<title>Installing and Configuring a Coda Client</>
<para>A Coda client can be run on any workstation that has kernel support for Coda in its kernel.  Supported <trademark>UNIX</>-like platforms are currently Linux,
FreeBSD and NetBSD.  </para>

<!--   This chapter assumes the chapter on <ref
id="KernelsforCoda" name="Configuring Kernels for use with Coda"> has
been read.  It contains valuable information for building a kernel if
a pre-built kernel with Coda support (or loadable coda kernel modules)
cannot be used. -->

<sect1>
<title>Installing and Configuring the Coda Client Binaries and Documentation</>

<formalpara>
<title>Linux</>
<para>Install RPMS using following commands:
<informalexample>
<screen>
<prompt>#</> <userinput>rpm -Uvh lwp-<replaceable>release</replaceable>.i386.rpm</userinput>
<prompt>#</> <userinput>rpm -Uvh rvm-<replaceable>release</replaceable>.i386.rpm</userinput>
<prompt>#</> <userinput>rpm -Uvh rpc2-<replaceable>release</replaceable>.i386.rpm</userinput>
<prompt>#</> <userinput>rpm -Uvh coda-debug-client-<replaceable>release</replaceable>.i386.rpm</userinput>
</screen>
</informalexample>
</para>
</formalpara>

<formalpara>
<title>FreeBSD</>
<para>Build and install coda5_client port from <filename>/usr/ports/net/coda5_client</>:
<informalexample>
<screen>
<prompt>#</> <userinput>cd /usr/ports/net/coda5_client</userinput>
<prompt>#</> <userinput>make</userinput>
<prompt>#</> <userinput>make install</userinput>
</screen>
</informalexample>
</para>
</formalpara>

<formalpara>
<title>NetBSD</>
<para>Build and install coda5_client source package from <filename>/usr/pkgsrc/net/coda5_client</>:
<informalexample>
<screen>
<prompt>#</> <userinput>cd /usr/pkgsrc/net/coda5_client</userinput>
<prompt>#</> <userinput>make</userinput>
<prompt>#</> <userinput>make install</userinput>
</screen>
</informalexample>
</para>
</formalpara>

<formalpara>
<title>Windows95/98</>
<para>Install Coda client by running ??????. 
</para>
</formalpara>

<para>Currently, client files for the supported platforms are installed
into the following directories: </para>

<formalpara>
<title>Linux</title> 
<para>
<itemizedlist mark="dash">
<listitem><para> user applications - <filename>/usr/bin</filename>;</para></listitem>
<listitem><para> system binaries  - <filename>/usr/sbin</filename>;</para></listitem>
<listitem><para> other files - <filename>/etc</filename>.</para></listitem>
</itemizedlist>
</para>
</formalpara>

<formalpara><title>FreeBSD</title>
<para>
<itemizedlist mark="dash">
<listitem><para> user applications - <filename>/usr/local/bin</filename>;</para></listitem>
<listitem><para> system binaries  - <filename>/usr/local/sbin</filename>;</para></listitem>
<listitem><para> other files - <filename>/usr/local/etc</filename>.</para></listitem>
</itemizedlist>
</para>
</formalpara>

<formalpara><title>NetBSD</title>
<para>
<itemizedlist mark="dash">
<listitem><para> user applications - <filename>/usr/local/bin</filename>;</para></listitem>
<listitem><para> system binaries  - <filename>/usr/local/sbin</filename>;</para></listitem>
<listitem><para> other files - <filename>/usr/local/etc</filename>.</para></listitem>
</itemizedlist>
</para>
</formalpara>

<formalpara><title>Windows95/98</title>
<para>
<itemizedlist mark="dash">
<listitem><para>All executables can be found in the directory <filename>C:\usr\coda\bin</filename>.  </para></listitem>
</itemizedlist>
</formalpara>

<note><para>Please make sure your PATH environment variable is set properly for your platform.  That is, ensure FreeBSD has <filename>/usr/local/{bin,sbin}</filename> and NetBSD has <filename>/usr/pkg/{bin,sbin}</filename> in its default search paths.  Linux installs Coda into the default system paths, so Linux should not need its default search path modified.</para></note>

<sect1>
<title>Linux and the BSD's: running venus, the client cache manager</>

<para>Once the binaries and documentation are installed, configuration of venus is identical for all platforms when <application>venus-setup</> is used.  To run the script, type:
<cmdsynopsis>
<command>venus-setup</command>
<arg choice="req">comma,seperated,list,of,servers</arg>
<arg choice="req">cache_size_in_kilobytes</arg>
</cmdsynopsis> 
</para>

<para>The <application>venus-setup</> script does all the hard work, it will setup the coda control files, create <filename>/dev/cfs0</> to communicate with the
kernel, ...  It also initializes a directory for cache files.  In your first Coda run we recommend a small cache, say 20MB. The cache size should be at least 10Meg, typically 60-200Meg is used.  Do not go above 300Meg.  All the files created will be placed under <filename>/usr/coda</>.  You should make sure that there is enough space in the file system on which <filename>/usr/coda</> resides to hold a fully populated cache.  </para

<para>For example, <command>venus-setup</> <option>micky,minnie,goofy</>
<option>40000</> will setup up <application>venus</application> to look for
the set of servers <systemitem class="systemname">micky</>, <systemitem
class="systemname">minnie</> and <systemitem class="systemname">goofy</> and
configure it to use 40MB of disk space for caching.  This information is kept
in <filename>/etc/coda/venus.conf</>.  We strongly recommend that you
initially try your client against <systemitem
class="systemname">testserver.coda.cs.cmu.edu</> first, and keep the cache
size to 20000.  </para>

<para>Start venus with <command>venus &amp;</command>.  An <option>-init</>
flag can be given when <application>venus</> is started to flush the local
cache contents.  Installation procedure performed by
<application>venus-setup</> forces <application>venus</> to inititialize cache
upon first startup.  The <option>-init</> flag can be given if Coda cannot
recover it's cache after a crash or after re-editing the
<filename>venus.conf</> file manually.  </para>

<para>Observe the venus log with <command>tail -f /usr/coda/etc/console</>, it
will tell you when <application>venus</> has started.  Use <command>codacon</>
to see the actions of the client in more detail, such as the communication
between <application>venus</> and the <application>codaservers</>.  </para>

<para>It is possible to see the upcalls from the kernel to
<application>venus</> by turning up logging, but they are not very
interesting.  (To turn on minimal debugging, type <command>vutil -d 1</> and
then <command>tail -f /usr/coda/coda.cache/venus.log</>.)  </para>

<para>To halt venus, type:
<informalexample>
<screen>
<prompt>#</> <userinput>vutil shutdown</>
<prompt>#</> <userinput>umount /coda  #(Linux only)</>
</screen>
</informalexample>
Or you can kill -9 venus, if you must.  
</para>

<note><title>Linux</>
<para>
<itemizedlist>

<listitem><para>Before restarting venus, <filename>/coda</filename> must be unmounted.  If umounting <filename>/coda</> gives trouble, make sure to exit all process that hang on to the Coda filesystem, e.g. by having files open or being cd'd into /coda.  A utility like <application>lsof</> and <application>fuser</> can help with this.  </para></listitem>

<listitem><para> <filename>/proc/fs/coda</> has interesting Coda statistics. 
</para></listitem>

<listitem><para> You can enable kernel debugging  with <command>vutil -kdebug 4095</command> and call tracing with <command>vutil ktrace 1</>. The messages appear in <filename>/var/log/messages</>.  </para></listitem>

</itemizedlist>
</note>
</sect1>

<sect1 id="sec-win95-start-conf">
<title>Windows 95: Starting and Configuring a Coda client</title> 

<para>During installation you will be prompted for the IP address of your Coda server(s).  Enter this as indicated.  </para>

<formalpara>
<title>CodaStart</>
<para>The <application>CodaStart</> is a Win32 windows-based application to control and observe the Windows 95 Coda client. It will be enhanced in the future. For now it provides a convenient way to start <application>venus.exe</>.  It also displays the kernel-venus communication for debugging purposes.  Printing the messages can be stopped by unticking the <guimenuitem>Monitor</> check box. The <guibutton>Reset</> button clears the display.  </para>

<para>When you start venus for the first time, or you want to reinitialize its cache, tick the <guimenuitem>Init venus</> check box. This will start venus with the <option>-init</> and <option>-cf 1500</> flag set. To add or override flags use the <guibutton>Configure</> button.  Start venus by clicking the left <guibutton>Start</> button. The 'Status' message will tell you 'Running' when <application>venus</> starts.  </para>

<para>Coda will be mounted automatically on the drive specified in the <filename>C:\usr\coda\etc\vstab</> file. <filename>vstab</> is created by the installer.  </para>

<para>To unmount, type <command>cfs uk</> in a DOS window. This will cleanly shut down venus as well.  </para>

<para>You are now ready to browse through the Coda filesystem using the explorer!</para>

<important><para>In some installations the DPMI DOS Extender window suspends when it is not active. In this case untick the window property <menuchoice><guimenu>Properties</><guisubmenu>Misc</><guisubmenu>Background</><guimenuitem>Always Suspend</></menuchoice>. If it is unticked, ticking and unticking it again might help. Also untick the <guimenuitem>Termination</> flag, to allow Coda to automatically shutdown, when the system shuts down. For your convenience tick the <guimenuitem>Close on Exit</> check box in the <guimenu>Program</> tab.  </para></important>
</sect1>

<sect1>
<title>Upgrading from a previous Release</title>

<para>If you are upgrading Coda from a previous release, do not run <application>venus-setup</application> again!  Simply obtain the packages for your platform as indicated above.  Then, shutdown <application>venus</> by becoming root and issue the following command:
<informalexample><screen>
<prompt>#</> <userinput>vutil -shutdown</userinput>
</screen></informalexample>
Next, install the binary packages following the installation instructions above.  Make sure you have the appropriate kernel or module for *BSD systems or the correct module for Linux systems.  The <filename>INSTALL.<replaceable>platform</replaceable></filename> document available from the Coda ftp site will contain relevant notes about upgrading your system core components.  </para>

<para>Once the new binaries are installed and the any necessary kernel updates are completed, you need to start the new venus for the first time by becoming root and typing:
<informalexample><screen>
<prompt>#</> <userinput>venus -init &</userinput>
</screen></informalexample>
The <option>-init</> flag is used to re-initialize the <filename>/usr/coda/venus.cache/</>.  </para>
</sect1>

<sect1>
<title>Configuration changes made by venus-setup</title>

<para>This section describes the changes that must be made to various
configuration files.
<!-- Samples of the files are contained in <xref linkend="ExampleFiles">. -->
</para>

<formalpara>
<title>/etc/coda/venus.conf</title>
<para>The Coda client configuration file <filename>venus.conf</> in
<filename>/etc/coda</> is copied from <filename>/etc/coda/venus.conf.ex</> if
it doesn't yet exist. All configurable options in this file are extensively
documented by comments in the file itself. </para>
</formalpara>

<formalpara>
<title>/etc/rc.*</title>
<para>To automatically start venus at boot time, the script <application>rc.venus</application> is provided in <filename>/usr/local/etc</> for FreeBSD systems and <filename>/usr/pkg/etc</> for NetBSD. <application>venus.init</application> is provided for RedHat Linux in <filename>/etc/rc.d/init.d</>.  </para>
</formalpara>

<para>RedHat Linux users should create the following symbolic link if it doesn't already exist:
<informalexample>
<screen>
<prompt>#</> <userinput>ln -sf /etc/rc.d/init.d/venus.init /etc/rc.d/rc3.d/S97venus.init</>
</screen>
</informalexample>  
This will allow <application>init</application> to process the file and start
venus at boot time. </para>
<!-- this should be fixed by proper port -->
<formalpara><title>FreeBSD</title>
<para>FreeBSD system users should create <filename>/usr/local/etc/rc.d/venus.sh</> (with <literal>rwxr-xr-x</> permitions), containing:  
<literallayout>
#!/bin/sh
echo -n " venus"
/usr/local/sbin/venus &
</literallayout>
</para>
</formalpara>
<!--Same here -->
<formalpara><title>NetBSD</title>
<para>NetBSD system users should create <filename>/usr/pkg/etc/rc.d/venus.sh</> (with <literal>rwxr-xr-x</> permitions), containing:
<literallayout>
#!/bin/sh
echo -n " venus"
/usr/pkg/sbin/venus &
</literallayout>
</para>
</formalpara>

<formalpara>
<title>/etc/services</title>
<para>The following port numbers are added to <filename>/etc/services</> by <application>venus-setup</application>:
<literallayout>
coda_opcons     1355/udp                        # Coda opcons
coda_auth       1357/udp                        # Coda auth
coda_udpsrv     1359/udp                        # Coda udpsrv
coda_filesrv    1361/udp                        # Coda filesrv
coda_venus      1363/udp                        # Coda venus
coda_backup     1407/tcp                        # coda backup service
codacon         1423/tcp        venus.cmu       # Coda Console
coda_aux1       1431/tcp                        # coda auxiliary service
coda_aux1       1431/udp                        # coda auxiliary service
coda_aux2       1433/tcp                        # coda auxiliary service
coda_aux2       1433/udp                        # coda auxiliary service
coda_aux3       1435/tcp                        # coda auxiliary service
coda_aux3       1435/udp                        # coda auxiliary service
</literallayout>
</para>
</formalpara>

<formalpara>
<title>/dev/cfs0</title>
<para>The following major and minor numbers are used for the various platforms:
<itemizedlist>
<listitem><para>Character-special with Major 67 and minor 0 for Linux
<informalexample><screen>
<prompt>#</> <userinput>mknod /dev/cfs0 c 67 0</userinput>
</screen></informalexample>
</para></listitem>
<listitem><para>Character-special with Major 93 and minor 0 for FreeBSD
<informalexample><screen>
<prompt>#</> <userinput>mknod /dev/cfs0 c 93 0</userinput>
</screen></informalexample>
</para></listitem>
<listitem><para>Character-special with Major 46 and minor 0 for NetBSD 1.2
<informalexample><screen>
<prompt>#</> <userinput>mknod /dev/cfs0 c 46 0</userinput>
</screen></informalexample>
</para></listitem>
<listitem><para>Character-special with Major 51 and minor 0 for NetBSD 1.3
<informalexample><screen>
<prompt>#</> <userinput>mknod /dev/cfs0 c 51 0</userinput>
</screen></informalexample>
</para></listitem>
</itemizedlist>
Please be sure to check the <application>INSTALL.<replaceable>platform</replaceable></application> to make sure these numbers have not changed.  For Linux and FreeBSD, the above numbers are officially registered.  Coda on NetBSD at present does not have formally registered major device numbers so these are subject to change from release to release.  </para>
</formalpara>

<formalpara>
<title>Where Data and Configuration Information is Stored</title>
<para>
<itemizedlist>
<listitem><para>
<filename>/usr/coda/etc</> Coda configuration files critical for venus startup.
</para></listitem>
<listitem><para>
<filename>/usr/coda/venus.cache</> Cached copies of Coda files.
</para></listitem>
<listitem><para>
<filename>/usr/coda/spool</> Saved CMLs from automatic or manual checkpointing
and aborted reintegration.
</para></listitem>
<listitem><para><filename>/usr/coda/tmp</> Temporary hoard related files.
</para></listitem>
<listitem><para>
<filename>/etc/services</> Various port numbers used by Coda for client
and server communication.
</para></listitem>
</itemizedlist>
</sect1>
</chapter>
