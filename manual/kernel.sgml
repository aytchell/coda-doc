<chapter id="KernelsforCoda">
<title>Configuring Kernels for use with Coda clients</>

<para>The Coda servers may be run on unmodified kernels.  The Coda <application>codasrv</> process is user-level code that uses existing kernel services.  The Venus client, however, requires some Coda-specific changes be made to the kernel.  The kernel specific changes add Coda specific definitions to the <firstterm>vnode</> layer in the kernel which are needed to satisfy the requirements of the Coda file system to the <acronym>VFS</> layer in the kernel.  </para>

<section>
<title>VFS Interface</>

<para>In Unix systems, the code which translates user-generated system calls into file system requests is called the <firstterm>VFS Interface</>.  Coda provides a VFS Interface by providing the necessary support for systems calls such as <literal>creat()</>, <literal>open()</>, <literal>stat()</>, etc.  </para>

<para>Communication between Venus and the kernel occurs through a character device <filename>/dev/cfs0</> (part of Coda) which provides the kernel with access to Venus for handling the vsf&lt;-&gt;vnode kernel interface.  Please see <xref linkend="ClientInstall"> for the major and minor device numbers specific to a supported platform.  </para>

<para>The rest of this chapter will focus on integrating the Coda code that satisfies the Vnode interface into the kernels of supported platforms.</para>
</section>

<section>
<title>Configuring a Linux kernel</>
<para></para>
</section>

<section>
<title>Configuring a FreeBSD kernel</>

<para>All modern releases of FreeBSD (3.x and 4.x) already include all necessary to configure kernel for Coda client. Using Coda client under FreeBSD, you have two options: either to use Coda <firstterm>kernel loadable module</> (<acronym>KLD</>), or to build custom kernel with Coda support. First option doesn't require any significant changes to your installation and can be used on systems without source code installed.  </para>

<formalpara>
<title>Loading Coda kernel module</>
<para>To experiment with Coda client, you can load Coda KLD using following command: <command>kldload coda</>. To verify that module is loaded run <command>kldstat</>, <filename>coda.ko</> should be listed in its output, which could look similar to this:
<informalexample>
<screen>
Id Refs Address    Size     Name
 1    6 0xc0100000 1cda44   kernel
 2    1 0xc02ce000 15648    coda.ko
 3    1 0xc0e1a000 7000     procfs.ko
 4    1 0xc0e28000 7000     ipfw.ko
 5    1 0xc0e4a000 15000    linux.ko
 6    1 0xc0e80000 2000     green_saver.ko
</screen>
</informalexample>
Coda module can be unloaded with <command>kldunload coda</>. To get FreeBSD load Coda module automaticaly on system startup, you should add <literal>coda_load="YES"</> line to <filename>/boot/loader.conf</>.  </para>
</formalpara>

<formalpara>
<title>Compiling Coda support into the custom kernel</>
<para>For guidelines on compiling and installing new FreeBSD kernels, please refer to <ulink url="http://www.freebsd.org/handbook/kernelconfig.html">Configuring the FreeBSD Kernel</ulink> chapter of the FreeBSD Handbook. Coda support requires including following lines into kernel configuration file:
<literallayout>
options         CODA                    #CODA filesystem.
pseudo-device   vcoda   4               #coda minicache &lt;-&gt; venus comm.
</literallayout>
This is the only Coda-specific modification requred.  </para>
</formalpara>
</section>

<section>
<title>Configuring a NetBSD kernel</>
<para></para>
</section>
</chapter>
