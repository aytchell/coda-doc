<!doctype linuxdoc SYSTEM>

<manpage TITLE="rds_init_heap" SECTNUM=3>
<sect1>NAME
<p>
rds_init_heap - initialize a recoverable heap

<sect1>SYNOPSIS
<p>
<verb>
#include "rds.h"

int rds_init_heap (base, length, chunkSize, nlists, tid, err)

char          *base;     /* base address of heap */
unsigned long length;    /* length of heap */
unsigned long chunkSize; /* size of allocation unit */
unsigned long nlists;    /* number of allocation lists */
rvm_tid_t     *tid;      /* pointer to transaction identifier */
int           *err;      /* pointer to error return location */
</verb>

<sect1>DESCRIPTION<P>
<tt>rds_init_heap</tt> initializes a recoverable heap in the previously
mapped memory region specified by the address <tt>base</tt> and <tt>length</tt>
parameters. 
Allocation requests will be rounded up to an integral number of
allocation units <tt>chunkSize</tt>, which is specified in bytes, and must
be an integral multiple of <tt>sizeof (char *)</tt>, and be at least 
<tt>RDS_MIN_CHUNK_SIZE</tt>.

For rapid allocation, RDS maintains separate allocation lists for
blocks of different sizes.  The sizes are integrals of <tt>chunkSize</tt>,
beginning with 1 and extending to the number of lists specified by
<tt>nlists</tt>, which must be at least <tt>RDS_MIN_FREE_LISTS</tt>.  These
lists are initially empty and the entire heap is 
placed on the large block list as a single block.  <tt>rds_malloc</tt> will
split this block as required.

If a number of blocks of specific sizes are required by the
application, the function <tt>rds_prealloc</tt> is provided for efficient
pre-allocation.  It should be called immediately after initializing
the heap.

An active transaction must be specified in the <tt>tid</tt> parameter; RDS
will not create an internal transaction for this function.
This transaction must be committed by the application for the
initialization to be permanent.

Since this function is called only to initialize the heap, RDS assumes
there is no concurrent access and does no internal locking.


<sect1>DIAGNOSTICS<P>
<descrip>
<tag/SUCCESS/ success
<tag/ENO_ROOM/ heap length not long enough for heap structures
<tag/EBAD_CHUNK_SIZE/ the chunk size is not large enough or is not a
multiple of sizeof(char *)
<tag/EBAD_LIST_LENGTH/ the number of free lists is not at least
RDS_MIN_FREE_LISTS
<tag/positive values/ RVM return codes
</descrip>


<sect1>SEE ALSO<P>
<tt>rds_zap_heap (3)</tt>, <tt>rds_prealloc (3)</tt>


<sect1>AUTHOR<P>
David C. Steere


</manpage>
