<!doctype linuxdoc SYSTEM>

<manpage TITLE="rvm_create_segment" SECTNUM=3>
<sect1>NAME
<p>
rvm_create_segment - create segment header

<sect1>SYNOPSIS
<p>
<verb>
#include "rvm_segment.h

typedef struct
    &lcub;
    rvm_offset_t        offset;
    rvm_length_t        length;
    char                *vmaddr;
    &rcub;
rvm_region_def_t;

rvm_return_t rvm_create_segment (DevName, DevLength, options,
                                 nregions, regions)

char             *DevName;  /* name of heap segment */
rvm_offset_t     DevLength; /* length of heap raw partition */
rvm_options_t    *options;  /* optional pointer to an options record */
unsigned long    nregions;  /* number of region descriptors */
rvm_region_def_t *region_defs; /* pointer to array of region descriptors */

</verb>

<sect1>DESCRIPTION<P>
<tt>rvm_create_segment</tt> is used to initialize the segment header with
the region load map.
The name of the file or partition
for the segment is specified by <tt>DevName</tt>, and the
length of the partition is specified in <tt>DevLength</tt>.  If the segment
is represented by a file, <tt>DevLength</tt> should be zero.  Also, the
file must exist and be at least one page long.

The parameter <tt>region_defs</tt> must point to an array of
<tt>rvm_region_def_t</tt> descriptors, with
one descriptor for each region to be loaded by
<tt>rvm_load_segment</tt>.  
The descriptor array must be allocated and deallocated by application,
and must be as long as the number of descriptors specified by
<tt>nregions</tt>.  The maximum number of regions that can be described in
the header is limited by the page size of the machine, which is
available as the macro <tt>RVM_PAGE_SIZE</tt>.  If the number of regions
requested by the parameter <tt>nregions</tt> causes the header to exceed
page size, the error <tt>RVM_ENO_MEMORY</tt> will be returned.

Each <tt>rvm_region_def_t</tt> descriptor requires the regions virtual
memory address and its length.  The virtual memory address where the
region will be 
loaded must be page-aligned.  It can be specified as zero and, if so, will
cause the loader to allocate virtual memory for the region.
Regions containing pointers must
specify an address to guarantee that they are loaded in the same place
each time.  
The region length must be an integral multiple of the page size, or
the error code <tt>RVM_ERANGE</tt> will be returned.

Regions are not allowed to overlap in virtual
memory.  If this condition is not met, the error code
<tt>RVM_EVM_OVERLAP</tt> will be returned.

<tt>rvm_create_segment</tt> assigns space in the segment to the header and
regions contiguously, beginning with the header at byte zero and with
length equal to the page size.  The regions are allocated next, in the
order of their occurrence in the <tt>region_defs</tt> array.  The offset is
returned in the <tt>offset</tt> field of each descriptor.

The virtual memory specified in the descriptors does not
have to be addressable when calling <tt>rvm_create_segment</tt>.
Also, <tt>rvm_create_segment</tt> does not map or alter the applications
data in the segment; only the first page of the segment for the header
is affected.

Since it is an initialization function, <tt>rvm_create_segment</tt>
performs no internal synchronization, so if there 
is a possibility of concurrent access to the segment,
the application must do appropriate serialization.

An optional RVM options descriptor can be passed to
<tt>rvm_create_segment</tt> if no log has been previously declared.
RVM must be initialized before <tt>rvm_create_segment</tt> is called.


<sect1>DIAGNOSTICS<P>
<descrip>
<tag/RVM_SUCCESS/ success
<tag/RVM_ERANGE/ a region length is not page sized
<tag/RVM_EVM_OVERLAP/ region mappings oberlap in virtual mapping
<tag/RVM_ENO_MEMORY/ heap exhausted, or header cannot be allocated
<tag/RVM_EOPTIONS/ invalid options record or pointer
<tag/RVM_ELOG/ no log file has been specified
<tag/RVM_EINIT/ RVM not initialized
</descrip>

<sect1>SEE ALSO<P>
<tt>rvm_load_segment (3)</tt>, <tt>rvm_map (3)</tt>, <tt>rds_zap_heap (3)</tt>,
<tt>rds_load_heap (3)</tt>, <tt>rdsinit (1)</tt>


<sect1>AUTHOR<P>
David C. Steere


<sect1>BUGS<P>
Specification of region allocations with the <tt>offset</tt> field of the
region descriptors is not allowed.


</manpage>
